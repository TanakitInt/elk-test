input
{
    beats
    {
        port => 5044
        host => "0.0.0.0"
    }
}

filter
{
    if [event][module] != "apache"
    {
        drop { }
    }

    if [event][dataset] == "apache.access"
    {
        grok
        {
            match =>
            {
                "message" => 
                [
                    '%{IPORHOST:[destination][domain]} %{IPORHOST:[source][ip]} - %{DATA:[user][name]} \[%{HTTPDATE:[apache][access][time]}\]
                    "(?:%{WORD:[http][request][method]} %{DATA:[_tmp][url_orig]} HTTP/%{NUMBER:[http][version]}|-)?"
                    %{NUMBER:[http][response][status_code]:long} (?:%{NUMBER:[http][response][body][bytes]:long}|-)(
                    "%{DATA:[http][request][referrer]}")?( "%{DATA:[user_agent][original]}")?',

                    '%{IPORHOST:[source][address]} - %{DATA:[user][name]} \[%{HTTPDATE:[apache][access][time]}\]
                    "(?:%{WORD:[http][request][method]} %{DATA:[_tmp][url_orig]} HTTP/%{NUMBER:[http][version]}|-)?"
                    %{NUMBER:[http][response][status_code]:long} (?:%{NUMBER:[http][response][body][bytes]:long}|-)(
                    "%{DATA:[http][request][referrer]}")?( "%{DATA:[user_agent][original]}")?',

                    '%{IPORHOST:[source][address]} - %{DATA:[user][name]} \[%{HTTPDATE:[apache][access][time]}\]
                    "-" %{NUMBER:[http][response][status_code]:long} -',

                    '\[%{HTTPDATE:[apache][access][time]}\] %{IPORHOST:[source][address]} %{DATA:[apache][access][ssl][protocol]}
                    %{DATA:[apache][access][ssl][cipher]} "%{WORD:[http][request][method]} %{DATA:[_tmp][url_orig]}
                    HTTP/%{NUMBER:[http][version]}" (-|%{NUMBER:[http][response][body][bytes]:long})'
                ]
            }

            remove_field => "message"
        }

        if "_grokparsefailure" in [tags]
        {
            drop { }
        }

        grok
        {
            match =>
            {
                "[source][address]" => "^(%(IP:[source][ip]}|%{HOSTNAME:[source][domain]})$"
            }
        }

        mutate
        {
            add_field =>
            {
                "[event][created]" => "%(@timestamp)"
            }
        }

        date
        {
            match => [ "[apache][access][time]", "dd/MMM/yyyy:H:m:s Z" ]
            remove_field => " [apache][access][time] " 
        }

        geoip
        {
            source => "[source][ip]"
            target => "[source][geo]"
        }
    }

    else if [event][dataset] == "apache.error"
    {
        grok
        {
            match =>
            {
                "message" =>
                [
                    '\[%{APACHE_TIME:[apache][error][timestamp]}\] \[%{LOGLEVEL:[log][level]}\]( \[client
                    %{IPORHOST:[source][address]}(:%{POSINT:[source][port]})?\])? %{GREEDYDATA:[message]}',
                    
                    '\[%{APACHE_TIME:[apache][error][timestamp]}\] \[%{DATA:[apache][error][module]}:%{APACHE_LOGLEVEL:[log][level]}\]
                    \[pid %{NUMBER:[process][pid]:long}(:tid %{NUMBER:[process][thread][id]:long})?\](
                    \[client %{IPORHOST:[source][address]}(:%{POSINT:[source][port]})?\])? %{GREEDYDATA:[message]}'
                ]
            }

            pattern_definitions =>
            {
                "APACHE_TIME" => "%{DAY} %{MONTH} %{MONTHDAY} %{TIME} %{YEAR}"
            }
        }

        date
        {
            match => [ "[apache][error][timestamp]", "EEE MMM dd H:m:s yyyy", "EEE MMM dd H:m:s.SSSSSS yyyy" ]
            remove_field => "[apache][error][timestamp]"
        }

        grok
        {
            match =>
            {
                "[source][address]" => "^(%(IP:[source][ip]}|%{HOSTNAME:[source][domain]})$"
            }
        }

        geoip
        {
            source => "[source][ip]"
            target => "[source][geo]"
        }
    }
}

output
{
    elasticsearch
    {
        hosts => "localhost"
        manage_template => false
        index => "%[@metadata][beat]-%[@metadata][version]-%{+YYYY-MM-dd}"
    }
}

